{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","filter","onDelete","showing","p","name","toLowerCase","indexOf","map","key","id","number","onClick","Filter","onChange","value","PersonForm","props","onSubmit","onChangeName","onChangeNumber","type","Notification","notification","message","className","url","axios","get","then","response","data","newPerson","post","delete","person","put","App","useState","setPersons","setFilter","newName","setNewName","newNumber","setNewNumber","setNotification","clearNotification","setTimeout","useEffect","personsService","initial","event","target","preventDefault","existingPerson","find","window","confirm","retPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56c71275.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({persons, filter, onDelete}) => {\r\n\r\n  const showing = filter !== \"\" ? persons.filter(p => p.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1) : persons\r\n\r\n  const rows = () => showing.map( p => \r\n    <div key={p.id}>\r\n      {p.name} {p.number}\r\n      <button onClick={() => onDelete(p.id)}>delete</button> \r\n    </div>)\r\n  return (<div>\r\n    {rows()}\r\n  </div>)\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({filter, onChange}) => {\r\n  return (<div>\r\n    filter shown with: <input value={filter} onChange={onChange}/>\r\n  </div>)\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <div>\r\n        name: <input value={props.name} onChange={props.onChangeName}/>\r\n      </div>\r\n      <div>\r\n        number: <input value={props.number} onChange={props.onChangeNumber}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if(notification.message===null) {\r\n    return null\r\n  }\r\n  return(\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\n//const url = 'http://localhost:3001/persons'\r\n//const url = 'http://localhost:3001/api/persons'\r\n//const url = 'https://phonebookggs.herokuapp.com/api/persons'\r\nconst url = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(url)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  const request = axios.post(url, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${url}/${id}`)\r\n}\r\n\r\nconst update = (id, person) => {\r\n  const request = axios.put(`${url}/${id}`, person)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\nimport personsService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [ filter, setFilter ] = useState('')\r\n\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n\r\n  const [ notification, setNotification ] = useState({type: null, message: null})\r\n\r\n  const clearNotification = () => setTimeout(() => setNotification({type: null, message: null}), 5000)\r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n      .then(initial => {\r\n        setPersons(initial)\r\n      })\r\n  }, [])\r\n\r\n  const addPhone = (event) => {\r\n    event.preventDefault()\r\n    const newPerson = {name: newName, number: newNumber}\r\n    const existingPerson = persons.find(p => p.name === newName)\r\n    if(!existingPerson) {\r\n      personsService\r\n        .create(newPerson)\r\n        .then(retPerson => {\r\n          setPersons(persons.concat(retPerson))\r\n          setNotification({type:'success', message:`Added ${retPerson.name}`})\r\n          clearNotification()\r\n        })\r\n        .catch(error => {\r\n          setNotification({type:'error', message:`Fail to add ${newName}. Error: ${error}`})\r\n          clearNotification()          \r\n        })\r\n    }\r\n    else {\r\n      if(window.confirm(`${existingPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\r\n        personsService\r\n          .update(existingPerson.id, {name: newName, number: newNumber})\r\n          .then(retPerson => {\r\n            setPersons(persons.map(p => p.id !== retPerson.id ? p : retPerson))\r\n            setNotification({type:'success', message:`Updated ${retPerson.name}`})\r\n            clearNotification()          \r\n          })\r\n          .catch(error => {\r\n            setPersons(persons.filter(p => p.id !== existingPerson.id))\r\n            setNotification({type:'error', message:`Information of ${newName} has already been removed from server`})\r\n            clearNotification()          \r\n          })\r\n        }\r\n    }\r\n  }\r\n\r\n  const onDelete = (id) => {\r\n    const person = persons.find(p => p.id === id)\r\n    if(window.confirm(`Delete ${person.name}`)) {\r\n      personsService\r\n      .remove(id)\r\n      .then(() => {\r\n        setPersons(persons.filter(p => p.id !== id))\r\n        setNotification({type:'success', message:`Deleted ${person.name}`})\r\n        clearNotification()          \r\n      })\r\n      .catch(error => {\r\n        setPersons(persons.filter(p => p.id !== id))\r\n        setNotification({type:'error', message:`Information of ${newName} has already been removed from server`})\r\n        clearNotification()          \r\n      })\r\n    }\r\n  }\r\n\r\n  const onFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const onNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const onNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\nreturn (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter filter={filter} onChange={onFilterChange}/>\r\n      <h3>add a new</h3>\r\n      <PersonForm onSubmit={addPhone} \r\n        name={newName} onChangeName={onNameChange}\r\n        number={newNumber} onChangeNumber={onNumberChange}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} filter={filter} onDelete={onDelete}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}